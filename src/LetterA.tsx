/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { MeshTransmissionMaterial, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    A002: THREE.Mesh;
  };
  materials: {
    ["A.001"]: THREE.MeshStandardMaterial;
  };
};

export function LetterAModel(
  props: React.ComponentProps<"group"> & {
    color?: string;
    metalness?: number;
    roughness?: number;
  }
) {
  const { color, metalness, roughness, ...groupProps } = props;
  const { nodes, materials } = useGLTF(
    "/models/A.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...groupProps} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.A002.geometry}
        position={[0.55, -0.15, 0.22]}
        rotation={[Math.PI / 2, -0.8, -0.0]}
        scale={[100.439, 140.439, 100.439]}
      >
        <meshStandardMaterial
          color={color || materials["A.001"].color}
          metalness={
            metalness !== undefined ? metalness : materials["A.001"].metalness
          }
          roughness={
            roughness !== undefined ? roughness : materials["A.001"].roughness
          }
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/A.glb");
